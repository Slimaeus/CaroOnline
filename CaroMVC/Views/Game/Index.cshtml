@using Model.GameModels


@model IEnumerable<PlayRoom>
<div class="container">
</div>
<div class="container row" id="room-list">
    <div class="col">
        <button class="btn btn-primary" id="create-room">Create a room</button>
    </div>
</div>

<table class="table table-light table-hover">
    <tr>
        <th scope="col">Id Room</th>
        <th scope="col">Room Name</th>
        <th scope="col">Current Players</th>
        <th scope="col">Status</th>
    </tr>
    <tbody>
        @foreach (var room in Model)
        {
            <tr>
                <th scope="row">@room.RoomName</th>
                <td>@room.RoomName</td>
                <td>
                    <span>@room.GameUsers.Count()/2</span>
                </td>
                <td>
                    @if (room.GameUsers.Any(user => user.UserName == User.Identity!.Name))
                    {
                        <a asp-action="Play" asp-route="@room.RoomName" class="btn btn-danger leave-room" room="@room.RoomName">Leave</a>
                    }
                    else if (room.GameUsers.Count() < room.RoomMax)
                    {
                        <a asp-action="Play" asp-route="@room.RoomName" class="btn btn-success join-room" room="@room.RoomName">Join</a>
                    }
                </td>

            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script src="~/lib/microsoft-signalr/signalr.min.js"></script>
    <script>
        const roomList = document.getElementById("room-list");

        const createRoomButton = document.getElementById("create-room");
        const leaveRoomButton = document.querySelectorAll(".leave-room");
        const joinRoomButton = document.querySelectorAll(".join-room");


        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/hubs/game")
            .configureLogging(signalR.LogLevel.Information)
            .build();
        // Catch addRoom event
        connection.on("addRoom", (roomName) => {
            location.reload();
        });
        connection.on("leaveRoom", (roomName) => {
            location.reload();
        });
        connection.start()
            .then(() => console.log("Connected!"))
            .catch(console.error);

        createRoomButton.addEventListener("click", event => {
            event.preventDefault();
            connection.invoke("RoomCreate");
        });

        leaveRoomButton.forEach((button) => {
            button.addEventListener("click", event => {
                const roomName = button.getAttribute("room");
                connection.invoke("RoomLeave", roomName);
            });
        })

        joinRoomButton.forEach((button) => {
            button.addEventListener("click", event => {
                const roomName = button.getAttribute("room");
                connection.invoke("RoomJoin", roomName);
            });
        });
    </script>
}