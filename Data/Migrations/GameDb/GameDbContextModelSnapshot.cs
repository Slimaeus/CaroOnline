// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations.GameDb
{
    [DbContext(typeof(GameDbContext))]
    partial class GameDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("Data.Connection", b =>
                {
                    b.Property<string>("ConnectionID")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Connected")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GameUserUserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ConnectionID");

                    b.HasIndex("GameUserUserName");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("Data.GameUser", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("UserName");

                    b.ToTable("GameUsers");
                });

            modelBuilder.Entity("Data.PlayRoom", b =>
                {
                    b.Property<string>("RoomName")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoomMax")
                        .HasColumnType("INTEGER");

                    b.HasKey("RoomName");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("GameUserPlayRoom", b =>
                {
                    b.Property<string>("GameUsersUserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoomsRoomName")
                        .HasColumnType("TEXT");

                    b.HasKey("GameUsersUserName", "RoomsRoomName");

                    b.HasIndex("RoomsRoomName");

                    b.ToTable("GameUserPlayRoom");
                });

            modelBuilder.Entity("Data.Connection", b =>
                {
                    b.HasOne("Data.GameUser", null)
                        .WithMany("Connections")
                        .HasForeignKey("GameUserUserName");
                });

            modelBuilder.Entity("GameUserPlayRoom", b =>
                {
                    b.HasOne("Data.GameUser", null)
                        .WithMany()
                        .HasForeignKey("GameUsersUserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.PlayRoom", null)
                        .WithMany()
                        .HasForeignKey("RoomsRoomName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.GameUser", b =>
                {
                    b.Navigation("Connections");
                });
#pragma warning restore 612, 618
        }
    }
}
