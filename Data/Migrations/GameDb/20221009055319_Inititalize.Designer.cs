// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations.GameDb
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20221009055319_Inititalize")]
    partial class Inititalize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GameUserPlayRoom", b =>
                {
                    b.Property<string>("GameUsersUserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoomsRoomName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("GameUsersUserName", "RoomsRoomName");

                    b.HasIndex("RoomsRoomName");

                    b.ToTable("GameUserPlayRoom");
                });

            modelBuilder.Entity("Model.GameModels.GameUser", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserName");

                    b.ToTable("GameUsers");
                });

            modelBuilder.Entity("Model.GameModels.PlayRoom", b =>
                {
                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RoomMax")
                        .HasColumnType("int");

                    b.HasKey("RoomName");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("GameUserPlayRoom", b =>
                {
                    b.HasOne("Model.GameModels.GameUser", null)
                        .WithMany()
                        .HasForeignKey("GameUsersUserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.GameModels.PlayRoom", null)
                        .WithMany()
                        .HasForeignKey("RoomsRoomName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
